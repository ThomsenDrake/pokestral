[project]
name = "pokestral"
version = "0.1.0"
description = "Pokemon Blue AI Agent"
readme = "README.md"
requires-python = ">=3.8.1"
dependencies = [
    "pyboy",
    "pydantic",
    "fastapi",
    "streamlit",
    "psutil",
    "requests",
    "types-requests>=2.31.0",
    "types-psutil>=5.9.0",
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = [
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "tox>=4.6.0",
    "nox>=2023.4.22",
    "types-requests>=2.31.0",
    "types-psutil>=5.9.0",
]

# UV-specific configuration for development
[tool.uv]
dev-dependencies = [
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "tox>=4.6.0",
    "nox>=2023.4.22",
    "types-requests>=2.31.0",
    "types-psutil>=5.9.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.env
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["."]
skip = ["__init__.py"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
namespace_packages = true

# Per-module options for mypy
[[tool.mypy.overrides]]
module = [
    "pyboy.*",
    "pydantic.*",
    "fastapi.*",
    "streamlit.*",
    "psutil.*",
    "requests.*",
    "types-requests.*",
    "types-psutil.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
]
